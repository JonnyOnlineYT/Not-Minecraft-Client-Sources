package dev.eternal.client.module.impl.exploit;

import dev.eternal.client.event.Subscribe;;
import dev.eternal.client.event.events.EventUpdate;
import dev.eternal.client.module.Module;
import dev.eternal.client.module.api.ModuleInfo;
import dev.eternal.client.property.impl.EnumSetting;
import dev.eternal.client.property.impl.NumberSetting;
import dev.eternal.client.property.impl.interfaces.INameable;
import dev.eternal.client.util.network.PacketUtil;
import dev.eternal.client.util.world.WorldUtil;
import lombok.AllArgsConstructor;
import lombok.Getter;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.util.BlockPos;

@ModuleInfo(name = "AntiVoid", description = "Prevents you from falling in the void.", category = Module.Category.EXPLOIT)
public class AntiVoid extends Module {

  private final EnumSetting<AntiVoidMode> enumSetting = new EnumSetting<>(this, "Mode", AntiVoidMode.values());
  private final NumberSetting distance = new NumberSetting(this, "Distance", "Distance to fall.", 3, 2, 10, 0.1);

  @Subscribe
  public void onUpdate(EventUpdate event) {
    EntityPlayerSP player = mc.thePlayer;
    if (mc.thePlayer.fallDistance >= distance.value() && WorldUtil.getBlockBellow() == BlockPos.ORIGIN) {
      switch (enumSetting.value()) {
        case NCP -> {
          event.groundState(true);
          PacketUtil.sendSilent(new C03PacketPlayer.C06PacketPlayerPosLook(player.lastTickPosX, player.lastTickPosY - 3, player.lastTickPosZ, player.rotationYaw, player.rotationPitch, true));
        }
        case PACKET -> {
          double[] values = {0.01, -0.02, 0.03, -0.04, 0.05, -0.06, 0.07, -0.08, 0.09, -0.1};
          for (double value : values) {
            PacketUtil.sendSilent(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + value, mc.thePlayer.posZ, true));
          }
        }
      }
      mc.thePlayer.fallDistance = 0;
    }
  }

  @Getter
  @AllArgsConstructor
  public enum AntiVoidMode implements INameable {
    NCP("NCP"),
    PACKET("Packet");
    private final String getName;
  }
}
